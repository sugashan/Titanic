<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<http pattern="/resources/**" security="none"/>
<!-- 	<http pattern="/login.do" security="none"/> -->
<!-- 	<http pattern="/login" security="none"/> -->
<!-- 	<http pattern="/logout" security="none"/> -->
	
	<http use-expressions="false">
		<intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<form-login />
		<logout/>
<!-- 		<logout logout-url="/logout.do" logout-success-url="/lockScreen.do"/> -->
	</http>

	<authentication-manager>
		<authentication-provider>
<!-- 			<user-service><user name="admin" password="{noop}admin" authorities="ROLE_ADMIN, ROLE_USER"/></user-service> -->
				<jdbc-user-service data-source-ref="dataSource"
					authorities-by-username-query="select user.userName, role.name from user 
													join employee on employee.user_id = user.id
													join role on employee.role_id = role.id 
												where user.userName=?" 
					users-by-username-query="select userName, password,1 from user where userName=? "	/>
		</authentication-provider>
	</authentication-manager>

</beans:beans>
